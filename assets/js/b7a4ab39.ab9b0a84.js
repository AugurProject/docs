"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[647],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(g,l(l({ref:t},u),{},{components:r})):n.createElement(g,l({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},0:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),l=["components"],i={title:"Getting Started"},s="How To Use",c={unversionedId:"turbo/getting-started",id:"turbo/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"First get dependencies and build everything.",source:"@site/docs/turbo/getting-started.md",sourceDirName:"turbo",slug:"/turbo/getting-started",permalink:"/turbo/getting-started",editUrl:"https://github.com/AugurProject/docs/edit/master/docs/turbo/getting-started.md",tags:[],version:"current",frontMatter:{title:"Getting Started"},sidebar:"docsSidebar",previous:{title:"Contract API",permalink:"/turbo/contract-api"},next:{title:"Hardhat Tasks",permalink:"/turbo/hardhat-tasks"}},u=[],p={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-use"},"How To Use"),(0,a.kt)("p",null,"First get dependencies and build everything.\n(Everything. Contracts, generated files, then finally the typescript itself.)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn && yarn build\n")),(0,a.kt)("p",null,"Now if you want to, run all the tests:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn test\n")),(0,a.kt)("p",null,"Want to test deploying?\nFirst start a local ethereum node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn smart ethereumNode\n")),(0,a.kt)("p",null,"Then in another terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn smart contracts:deploy --network localhost\n")),(0,a.kt)("p",null,"Want to deploy to kovan?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"PRIVATE_KEY=$yourPrivateKeyHere yarn smart contracts:deploy --network kovan\n")),(0,a.kt)("p",null,"Oh, now you want to verify your contracts on etherscan?\nYou will need an etherscan api key, so get one.\nThen run this bad boy:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ETHERSCAN_API_KEY=$yourEtherscanAPIKeyHere yarn smart contracts:verify --network kovan $contractAddress $firstConstructorArg $secondConstructorArg\n")),(0,a.kt)("p",null,"(This process will be automated further, to apply to most or all of the deployed contracts without needing to know their constructor arguments.)"),(0,a.kt)("h1",{id:"want-to-write-code"},"Want To Write Code"),(0,a.kt)("p",null,"This repo uses eslint with a few options and prettier with 120 columns.\nBefore committing any code, please run prettier:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn format:write\n")),(0,a.kt)("p",null,"Then run the linter:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn lint\n")))}d.isMDXComponent=!0}}]);