"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[647],[function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],l={title:"Getting Started",slug:"/"},i="How To Use",u={unversionedId:"turbo/getting-started",id:"turbo/getting-started",isDocsHomePage:!1,title:"Getting Started",description:"First get dependencies and build everything.",source:"@site/docs/turbo/getting-started.md",sourceDirName:"turbo",slug:"/",permalink:"/",editUrl:"https://github.com/AugurProject/docs/edit/main/website/docs/turbo/getting-started.md",tags:[],version:"current",frontMatter:{title:"Getting Started",slug:"/"},sidebar:"docsSidebar",previous:{title:"Contract API",permalink:"/contract-api"},next:{title:"Hardhat Tasks",permalink:"/tasks"}},c=[],p={toc:c};function d(t){var e=t.components,n=(0,a.Z)(t,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-use"},"How To Use"),(0,o.kt)("p",null,"First get dependencies and build everything.\n(Everything. Contracts, generated files, then finally the typescript itself.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn && yarn build\n")),(0,o.kt)("p",null,"Now if you want to, run all the tests:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn test\n")),(0,o.kt)("p",null,"Want to test deploying?\nFirst start a local ethereum node:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn smart ethereumNode\n")),(0,o.kt)("p",null,"Then in another terminal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn smart contracts:deploy --network localhost\n")),(0,o.kt)("p",null,"Want to deploy to kovan?"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"PRIVATE_KEY=$yourPrivateKeyHere yarn smart contracts:deploy --network kovan\n")),(0,o.kt)("p",null,"Oh, now you want to verify your contracts on etherscan?\nYou will need an etherscan api key, so get one.\nThen run this bad boy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"ETHERSCAN_API_KEY=$yourEtherscanAPIKeyHere yarn smart contracts:verify --network kovan $contractAddress $firstConstructorArg $secondConstructorArg\n")),(0,o.kt)("p",null,"(This process will be automated further, to apply to most or all of the deployed contracts without needing to know their constructor arguments.)"),(0,o.kt)("h1",{id:"want-to-write-code"},"Want To Write Code"),(0,o.kt)("p",null,"This repo uses eslint with a few options and prettier with 120 columns.\nBefore committing any code, please run prettier:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn format:write\n")),(0,o.kt)("p",null,"Then run the linter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn lint\n")))}d.isMDXComponent=!0}]]);